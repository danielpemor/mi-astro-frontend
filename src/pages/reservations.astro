---
// src/pages/reservations.astro
import DefaultLayout from '../layouts/DefaultLayout.astro';
import { getOpeningHours } from '../lib/directus';


const openingHours = await getOpeningHours();
---

<DefaultLayout title="Reservaciones - Restaurante">
  <!-- Espaciador para navbar fijo -->
  <div class="h-20"></div>
  
  <!-- Cabecera de la página -->
  <div class="bg-gray-50 py-16">
    <div class="container mx-auto px-4 text-center">
      <h1 class="text-4xl md:text-5xl font-bold mb-4">Reservaciones</h1>
      <p class="text-gray-600 max-w-2xl mx-auto">Reserva tu mesa y disfruta de una experiencia gastronómica inolvidable.</p>
    </div>
  </div>
  
  <!-- Formulario de reservación -->
  <section class="py-20">
    <div class="container mx-auto px-4 max-w-4xl">
      <div class="bg-white rounded-lg shadow-lg overflow-hidden">
        <div class="p-8">
          <h2 class="text-2xl font-bold mb-6 text-center">Haz tu reserva</h2>
          
          <form id="reservationForm" class="space-y-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label for="nombre" class="block text-sm font-medium text-gray-700 mb-1">Nombre completo</label>
                <input 
                  type="text" 
                  id="nombre" 
                  name="nombre" 
                  required
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                  placeholder="Tu nombre"
                >
              </div>
              
              <div>
                <label for="telefono" class="block text-sm font-medium text-gray-700 mb-1">Teléfono</label>
                <input 
                  type="tel" 
                  id="telefono" 
                  name="telefono"
                  required
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                  placeholder="Tu número de teléfono"
                >
              </div>
            </div>
            
            <div>
              <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                required
                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                placeholder="Tu correo electrónico"
              >
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div>
                <label for="fecha" class="block text-sm font-medium text-gray-700 mb-1">Fecha</label>
                <input 
                  type="date" 
                  id="fecha" 
                  name="fecha" 
                  required
                  min={new Date().toISOString().split('T')[0]}
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                >
              </div>
              
              <div>
                <label for="hora" class="block text-sm font-medium text-gray-700 mb-1">Hora</label>
                <select 
                  id="hora" 
                  name="hora" 
                  required
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                >
                  <option value="">Selecciona una hora</option>
                  <option value="10:00">10:00</option>
                  <option value="10:30">10:30</option>
                  <option value="11:00">11:00</option>
                  <option value="11:30">11:30</option>
                  <option value="12:00">12:00</option>
                  <option value="12:30">12:30</option>
                  <option value="13:00">13:00</option>
                  <option value="13:30">13:30</option>
                  <option value="14:00">14:00</option>
                  <option value="14:30">14:30</option>
                  <option value="15:00">15:00</option>
                  <option value="19:00">19:00</option>
                  <option value="19:30">19:30</option>
                  <option value="20:00">20:00</option>
                  <option value="20:30">20:30</option>
                  <option value="21:00">21:00</option>
                  <option value="21:30">21:30</option>
                </select>
              </div>
              
              <div>
                <label for="personas" class="block text-sm font-medium text-gray-700 mb-1">Número de personas</label>
                <select 
                  id="personas" 
                  name="personas" 
                  required
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                >
                  <option value="">Selecciona</option>
                  <option value="1">1 persona</option>
                  <option value="2">2 personas</option>
                  <option value="3">3 personas</option>
                  <option value="4">4 personas</option>
                  <option value="5">5 personas</option>
                  <option value="6">6 personas</option>
                  <option value="7">7 personas</option>
                  <option value="8">8 personas</option>
                </select>
              </div>
            </div>
            
            <div>
              <label for="comentarios" class="block text-sm font-medium text-gray-700 mb-1">Comentarios adicionales (alergias, ocasión especial, etc.)</label>
              <textarea 
                id="comentarios" 
                name="comentarios" 
                rows="3"
                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                placeholder="Indícanos cualquier necesidad especial..."
              ></textarea>
            </div>
            
            <button 
              type="submit" 
              id="submitBtn"
              class="w-full bg-[var(--primaryColor)] text-white py-3 px-6 rounded-md hover:bg-[var(--secondaryColor)] transition-colors duration-300 font-medium disabled:opacity-50 disabled:cursor-not-allowed"
            >
              Confirmar reserva
            </button>
          </form>
        </div>
      </div>
      
      <!-- Información adicional -->
      <div class="mt-12 text-center">
        <h3 class="text-xl font-bold mb-4">Información adicional</h3>
        <ul class="space-y-2 text-gray-600 max-w-2xl mx-auto">
          <li>• Tu reserva será confirmada por teléfono o email dentro de las próximas 24 horas.</li>
          <li>• Mantén tu teléfono disponible para confirmación.</li>
          <li>• Las reservas están sujetas a disponibilidad.</li>
          <li>• Para grupos grandes (más de 8 personas), por favor contacta directamente al restaurante.</li>
        </ul>
        
        <!-- Horarios -->
        <div class="mt-8">
          <h3 class="text-xl font-bold mb-4">Nuestros horarios</h3>
          <div class="flex flex-col md:flex-row justify-center gap-4 md:gap-8">
            {openingHours.length > 0 ? (
              openingHours.map((day) => (
                <div class="flex flex-col items-center">
                  <span class="font-medium">{day.day_of_week}</span>
                  <span class="text-gray-600">{day.is_closed ? 'Cerrado' : `${day.open_time} - ${day.close_time}`}</span>
                </div>
              ))
            ) : (
              <>
                <div class="flex flex-col items-center">
                  <span class="font-medium">Lun - Vie</span>
                  <span class="text-gray-600">11:00 - 22:00</span>
                </div>
                <div class="flex flex-col items-center">
                  <span class="font-medium">Sábados</span>
                  <span class="text-gray-600">10:00 - 23:00</span>
                </div>
                <div class="flex flex-col items-center">
                  <span class="font-medium">Domingos</span>
                  <span class="text-gray-600">10:00 - 21:00</span>
                </div>
              </>
            )}
          </div>
        </div>
      </div>
    </div>
  </section>
</DefaultLayout>

<script>
  // Formulario de reservación
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('reservationForm');
    const submitBtn = document.getElementById('submitBtn');
    
    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Deshabilitar el botón durante el envío
        submitBtn.disabled = true;
        submitBtn.textContent = 'Enviando...';
        
        // Obtener datos del formulario
        const formData = new FormData(form);
        const reservationData = {
          nombre: formData.get('nombre'),
          telefono: formData.get('telefono'),
          email: formData.get('email'),
          fecha: formData.get('fecha'),
          hora: formData.get('hora'),
          personas: formData.get('personas'),
          comentarios: formData.get('comentarios') || null
        };
        
        console.log('Enviando datos de reserva:', reservationData);
        
        try {
          // Usar la API route de Astro en lugar de llamar directamente a Directus
          const response = await fetch('/api/reservations', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(reservationData)
          });
          
          console.log('Respuesta del servidor:', response);
          
          if (response.ok) {
            const result = await response.json();
            console.log('Reserva creada:', result);
            alert('¡Reserva recibida con éxito! Te contactaremos para confirmar tu reserva.');
            form.reset();
          } else {
            const errorData = await response.json();
            console.error('Error al enviar reserva:', errorData);
            alert('El horario seleccionado ya alcanzo el limite de su capacidad.');
          }
        } catch (error) {
          console.error('Error de red:', error);
          alert('Error de conexión. Por favor, verifica tu conexión a internet e inténtalo de nuevo.');
        } finally {
          // Rehabilitar el botón
          submitBtn.disabled = false;
          submitBtn.textContent = 'Confirmar reserva';
        }
      });
    }
  });
</script>
<script>
document.addEventListener('DOMContentLoaded', () => {
  const form        = document.getElementById('reservationForm');
  const fechaEl     = document.getElementById('fecha');
  const horaEl      = document.getElementById('hora');
  const personasEl  = document.getElementById('personas');
  const avisoCupo   = document.getElementById('avisoCupo');
  const submitBtn   = document.getElementById('submitBtn');

  /* ---------- helpers ---------- */
  const hoyISO = new Date().toISOString().slice(0,10);
  const minHoy = new Date().getHours() * 60 + new Date().getMinutes();

  /* ---------- carga / refresca horarios ---------- */
  async function refrescarHorarios() {
    const fecha = fechaEl.value;
    if (!fecha) return;

    // Traer disponibilidad global (personas=1)
    const res  = await fetch(`/api/availability?fecha=${fecha}&personas=1`);
    const data = await res.json();
    const horarios = data.horarios || {};

    // limpiar selector hora
    const opcionesBase = horaEl.querySelectorAll('option[value]');
    opcionesBase.forEach(opt => {
      opt.hidden = true;          // mostrar todas
      opt.dataset.max = '0';       // reset
    });

    // Iterar y ocultar las no válidas
    opcionesBase.forEach(opt => {
      const h = opt.value;             // "11:30"
      const info = horarios[h];
      if (!info) { opt.hidden = true; return; }

      const llena  = info.espaciosDisponibles === 0;
      const pasada = (fecha === hoyISO) &&
        ((+h.split(':')[0] * 60 + +h.split(':')[1]) <= minHoy);

      if (llena || pasada) {
        opt.hidden = true;             // no aparece en la lista
      } else {
        opt.dataset.max = info.espaciosDisponibles;   // guarda cupo
      }
    });

    horaEl.value = '';                // reinicia selección
    personasEl.innerHTML = '<option value="">Selecciona</option>';
    avisoCupo.textContent = '';
  }

  /* ---------- cuando eligen hora ---------- */
  function onHoraChange() {
    const optSel = horaEl.selectedOptions[0];
    if (!optSel) return;

    const max = parseInt(optSel.dataset.max || '1', 10);

    // reconstruir selector personas
    let html = '<option value="">Selecciona</option>';
    for (let i = 1; i <= max; i++) {
      html += `<option value="${i}">${i} persona${i>1?'s':''}</option>`;
    }
    personasEl.innerHTML = html;

    avisoCupo.textContent = `Quedan ${max} lugar${max>1?'es':''} disponibles.`;
  }

  /* ---------- listeners ---------- */
  fechaEl.addEventListener('change', refrescarHorarios);
  horaEl .addEventListener('change', onHoraChange);

  /* ---------- envío del formulario ---------- */
  form.addEventListener('submit', async e => {
    e.preventDefault();

    submitBtn.disabled = true;
    submitBtn.textContent = 'Enviando…';

    const datos = Object.fromEntries(new FormData(form).entries());

    try {
      const r = await fetch('/api/reservations', {
        method:'POST',
        headers:{'Content-Type':'application/json'},
        body:JSON.stringify(datos)
      });
      const j = await r.json();
      if (r.ok) {
        alert('Reserva recibida, te confirmaremos pronto 😊');
        form.reset();
        avisoCupo.textContent = '';
      } else {
        alert(j.message || 'No fue posible reservar.');
      }
    } catch {
      alert('Error de conexión, inténtalo de nuevo.');
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = 'Confirmar reserva';
    }
  });

  /* cargamos horarios si la fecha ya tiene valor (autocompletado del navegador) */
  if (fechaEl.value) refrescarHorarios();
});
</script>
