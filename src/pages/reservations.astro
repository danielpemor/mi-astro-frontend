---
import DefaultLayout from '../layouts/DefaultLayout.astro';
---

<DefaultLayout title="Reservaciones - Restaurante">
  <!-- Espaciador para navbar fijo -->
  <div class="h-20"></div>

  <!-- Cabecera -->
  <div class="bg-gray-50 py-16">
    <div class="container mx-auto px-4 text-center">
      <h1 class="text-4xl md:text-5xl font-bold mb-4">Reservaciones</h1>
      <p class="text-gray-600 max-w-2xl mx-auto">
        Reserva tu mesa y disfruta de una experiencia gastronómica inolvidable.
      </p>
    </div>
  </div>

  <!-- Formulario -->
  <section class="py-20">
    <div class="container mx-auto px-4 max-w-4xl">
      <div class="bg-white rounded-lg shadow-lg overflow-hidden">
        <div class="p-8">
          <h2 class="text-2xl font-bold mb-6 text-center">Haz tu reserva</h2>

          <form id="reservationForm" class="space-y-6">
            <!-- Nombre / Teléfono -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label for="nombre" class="block text-sm font-medium text-gray-700 mb-1">
                  Nombre completo
                </label>
                <input
                  id="nombre"
                  name="nombre"
                  type="text"
                  required
                  placeholder="Tu nombre"
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                >
              </div>

              <div>
                <label for="telefono" class="block text-sm font-medium text-gray-700 mb-1">
                  Teléfono
                </label>
                <input
                  id="telefono"
                  name="telefono"
                  type="tel"
                  required
                  placeholder="Tu número de teléfono"
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                >
              </div>
            </div>

            <!-- Email -->
            <div>
              <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
              <input
                id="email"
                name="email"
                type="email"
                required
                placeholder="Tu correo electrónico"
                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
              >
            </div>

            <!-- Fecha / Hora / Personas -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div>
                <label for="fecha" class="block text-sm font-medium text-gray-700 mb-1">Fecha</label>
                <input
                  id="fecha"
                  name="fecha"
                  type="date"
                  required
                  min={new Date().toISOString().split('T')[0]}
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                >
              </div>

              <div>
                <label for="hora" class="block text-sm font-medium text-gray-700 mb-1">Hora</label>
                <select
                  id="hora"
                  name="hora"
                  required
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                >
                  <option value="">Selecciona una hora</option>
                  <option value="10:00">10:00</option>
                  <option value="10:30">10:30</option>
                  <option value="11:00">11:00</option>
                  <option value="11:30">11:30</option>
                  <option value="12:00">12:00</option>
                  <option value="12:30">12:30</option>
                  <option value="13:00">13:00</option>
                  <option value="13:30">13:30</option>
                  <option value="14:00">14:00</option>
                  <option value="14:30">14:30</option>
                  <option value="15:00">15:00</option>
                  <option value="19:00">19:00</option>
                  <option value="19:30">19:30</option>
                  <option value="20:00">20:00</option>
                  <option value="20:30">20:30</option>
                  <option value="21:00">21:00</option>
                  <option value="21:30">21:30</option>
                </select>
                <div id="avisoCupo" class="text-sm text-gray-600 mt-1"></div>
              </div>

              <div>
                <label for="personas" class="block text-sm font-medium text-gray-700 mb-1">
                  Número de personas
                </label>
                <select
                  id="personas"
                  name="personas"
                  required
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
                >
                  <option value="">Selecciona</option>
                  <option value="1">1 persona</option>
                  <option value="2">2 personas</option>
                  <option value="3">3 personas</option>
                  <option value="4">4 personas</option>
                  <option value="5">5 personas</option>
                  <option value="6">6 personas</option>
                  <option value="7">7 personas</option>
                  <option value="8">8 personas</option>
                </select>
              </div>
            </div>

            <!-- Comentarios -->
            <div>
              <label for="comentarios" class="block text-sm font-medium text-gray-700 mb-1">
                Comentarios adicionales (alergias, ocasión especial, etc.)
              </label>
              <textarea
                id="comentarios"
                name="comentarios"
                rows="3"
                placeholder="Indícanos cualquier necesidad especial..."
                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"
              ></textarea>
            </div>

            <button
              type="submit"
              id="submitBtn"
              class="w-full bg-[var(--primaryColor)] text-white py-3 px-6 rounded-md hover:bg-[var(--secondaryColor)] transition-colors duration-300 font-medium disabled:opacity-50 disabled:cursor-not-allowed"
            >
              Confirmar reserva
            </button>
          </form>
        </div>
      </div>

      <!-- Información adicional (sin horarios) -->
      <div class="mt-12 text-center">
        <h3 class="text-xl font-bold mb-4">Información adicional</h3>
        <ul class="space-y-2 text-gray-600 max-w-2xl mx-auto">
          <li>• Tu reserva será confirmada por teléfono o email dentro de las próximas 24&nbsp;horas.</li>
          <li>• Mantén tu teléfono disponible para confirmación.</li>
          <li>• Las reservas están sujetas a disponibilidad.</li>
          <li>• Para grupos grandes (más de 8 personas), por favor contacta directamente al restaurante.</li>
        </ul>
      </div>
    </div>
  </section>
</DefaultLayout>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const form        = document.getElementById('reservationForm');
  const fechaEl     = document.getElementById('fecha');
  const horaEl      = document.getElementById('hora');
  const personasEl  = document.getElementById('personas');
  const avisoCupo   = document.getElementById('avisoCupo');
  const submitBtn   = document.getElementById('submitBtn');

  // ---------- Helpers fecha/hora ----------
  const hoyISO = new Date().toISOString().slice(0,10);

  function minutos(horaStr) {
    const [h, m] = horaStr.split(':').map(Number);
    return h * 60 + m;
  }

  // ---------- Cargar horarios disponibles ----------
  async function refrescarHorarios() {
    const fecha = fechaEl.value;
    if (!fecha) return;

    const res  = await fetch(`/api/availability?fecha=${fecha}&personas=1`);
    const data = await res.json();
    const horarios = data.horarios || {};

    // hora actual (MX) si la fecha es hoy
    const ahora = new Date().toLocaleString('en-US', { timeZone:'America/Mexico_City' });
    const ahoraMin = minutos(new Date(ahora).toTimeString().slice(0,5));
    const esHoy    = fecha === hoyISO;

    // reset selector hora
    const opts = horaEl.querySelectorAll('option[value]');
    opts.forEach(opt => {
      const h   = opt.value;
      const info= horarios[h];
      if (!info) { opt.hidden = true; return; }

      const pasada = esHoy && minutos(h) <= ahoraMin;
      const sinEsp = info.espaciosDisponibles === 0;

      opt.hidden     = pasada || sinEsp;
      opt.dataset.max= info.espaciosDisponibles;
    });

    horaEl.value = '';
    personasEl.innerHTML = '<option value="">Selecciona</option>';
    avisoCupo.textContent = '';
  }

  // ---------- Al cambiar hora ----------
  function onHoraChange() {
    const opt = horaEl.selectedOptions[0];
    if (!opt) return;

    const max = parseInt(opt.dataset.max || '1', 10);
    let html = '<option value="">Selecciona</option>';
    for (let i=1;i<=max;i++) html += `<option value="${i}">${i} persona${i>1?'s':''}</option>`;
    personasEl.innerHTML = html;
    avisoCupo.textContent = `Quedan ${max} lugar${max>1?'es':''} disponibles.`;
  }

  // ---------- Envío formulario ----------
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    submitBtn.disabled = true;
    submitBtn.textContent = 'Enviando…';

    const body = Object.fromEntries(new FormData(form).entries());

    try {
      const r = await fetch('/api/reservations', {
        method:'POST',
        headers:{'Content-Type':'application/json'},
        body: JSON.stringify(body)
      });
      const j = await r.json();
      if (r.ok) {
        alert('¡Reserva recibida! Te contactaremos pronto.');
        form.reset();
        avisoCupo.textContent = '';
      } else {
        alert(j.message || 'No fue posible reservar.');
      }
    } catch {
      alert('Error de conexión. Intenta de nuevo.');
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = 'Confirmar reserva';
    }
  });

  fechaEl.addEventListener('change', refrescarHorarios);
  horaEl .addEventListener('change', onHoraChange);

  if (fechaEl.value) refrescarHorarios();
});
</script>
