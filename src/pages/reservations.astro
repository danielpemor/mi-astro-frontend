---
import DefaultLayout from '../layouts/DefaultLayout.astro';
---

<DefaultLayout title="Reservaciones - Restaurante">
  <div class="h-20"></div>

  <div class="bg-gray-50 py-16">
    <div class="container mx-auto px-4 text-center">
      <h1 class="text-4xl md:text-5xl font-bold mb-4">Reservaciones</h1>
      <p class="text-gray-600 max-w-2xl mx-auto">
        Reserva tu mesa y disfruta de una experiencia gastronómica inolvidable.
      </p>
    </div>
  </div>

  <section class="py-20">
    <div class="container mx-auto px-4 max-w-4xl">
      <div class="bg-white rounded-lg shadow-lg overflow-hidden">
        <div class="p-8">
          <h2 class="text-2xl font-bold mb-6 text-center">Haz tu reserva</h2>

          <form id="reservationForm" class="space-y-6">
            <!-- Nombre / Teléfono -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label for="nombre" class="block text-sm font-medium text-gray-700 mb-1">Nombre completo</label>
                <input id="nombre" name="nombre" type="text" required placeholder="Tu nombre"
                  class="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"/>
              </div>
              <div>
                <label for="telefono" class="block text-sm font-medium text-gray-700 mb-1">Teléfono</label>
                <input id="telefono" name="telefono" type="tel" required placeholder="Tu teléfono"
                  class="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"/>
              </div>
            </div>

            <!-- Email -->
            <div>
              <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
              <input id="email" name="email" type="email" required placeholder="Tu correo"
                class="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"/>
            </div>

            <!-- Fecha / Hora / Personas -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              <!-- Fecha -->
              <div>
                <label for="fecha" class="block text-sm font-medium text-gray-700 mb-1">Fecha</label>
                <input id="fecha" name="fecha" type="date" required
                  min={new Date().toISOString().split('T')[0]}
                  class="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"/>
              </div>

              <!-- Hora -->
              <div>
                <label for="hora" class="block text-sm font-medium text-gray-700 mb-1">Hora</label>
                <select id="hora" name="hora" required
                  class="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent">
                  <option value="">Selecciona una hora</option>
                  <option value="10:00">10:00</option>
                  <option value="10:30">10:30</option>
                  <option value="11:00">11:00</option>
                  <option value="11:30">11:30</option>
                  <option value="12:00">12:00</option>
                  <option value="12:30">12:30</option>
                  <option value="13:00">13:00</option>
                  <option value="13:30">13:30</option>
                  <option value="14:00">14:00</option>
                  <option value="14:30">14:30</option>
                  <option value="15:00">15:00</option>
                  <option value="19:00">19:00</option>
                  <option value="19:30">19:30</option>
                  <option value="20:00">20:00</option>
                  <option value="20:30">20:30</option>
                  <option value="21:00">21:00</option>
                  <option value="21:30">21:30</option>
                  <option value="22:00">22:00</option>
                </select>
                <div id="avisoCupo" class="text-sm text-gray-600 mt-1"></div>
              </div>

              <!-- Personas -->
              <div>
                <label for="personas" class="block text-sm font-medium text-gray-700 mb-1">Número de personas</label>
                <select id="personas" name="personas" required
                  class="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent">
                  <option value="">Selecciona</option>
                </select>
              </div>
            </div>

            <!-- Comentarios -->
            <div>
              <label for="comentarios" class="block text-sm font-medium text-gray-700 mb-1">
                Comentarios adicionales
              </label>
              <textarea id="comentarios" name="comentarios" rows="3" placeholder="Alergias u ocasión especial..."
                class="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-[var(--primaryColor)] focus:border-transparent"></textarea>
            </div>

            <button type="submit" id="submitBtn"
              class="w-full bg-[var(--primaryColor)] text-white py-3 rounded-md hover:bg-[var(--secondaryColor)] transition disabled:opacity-50 disabled:cursor-not-allowed">
              Confirmar reserva
            </button>
          </form>

        </div>
      </div>

      <!-- Información adicional -->
      <div class="mt-12 text-center">
        <h3 class="text-xl font-bold mb-4">Información adicional</h3>
        <ul class="space-y-2 text-gray-600 max-w-2xl mx-auto">
          <li>Tu reserva será confirmada por teléfono o email en las próximas 24 horas.</li>
          <li>Mantén tu teléfono disponible para confirmación.</li>
          <li>Las reservas están sujetas a disponibilidad.</li>
          <li>Para grupos mayores a 8 personas, contacta directamente al restaurante.</li>
        </ul>
      </div>
    </div>
  </section>
</DefaultLayout>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const form       = document.getElementById('reservationForm');
  const fechaEl    = document.getElementById('fecha');
  const horaEl     = document.getElementById('hora');
  const personasEl = document.getElementById('personas');
  const avisoCupo  = document.getElementById('avisoCupo');
  const submitBtn  = document.getElementById('submitBtn');

  // Guarda el cupo real por hora
  let cupoPorHora = {};

  // Convierte "HH:MM" a minutos
  const toMin = s => {
    const [h, m] = s.split(':').map(Number);
    return h*60 + m;
  };

  // Refresca los horarios según la fecha
  async function refrescarHorarios() {
    const fecha = fechaEl.value;
    if (!fecha) return;

    // Deshabilita selects hasta que cargue
    horaEl.disabled = true;
    personasEl.disabled = true;
    avisoCupo.textContent = 'Cargando disponibilidad...';

    // Zona del cliente
    const tz = Intl.DateTimeFormat().resolvedOptions().timeZone;
    const res = await fetch(`/api/availability?fecha=${fecha}&personas=1&tz=${encodeURIComponent(tz)}`);
    const data = await res.json();
    const horarios = data.horarios || {};

    // Zona y hora actual en minutos
    const now = new Date().toLocaleString('en-US', { timeZone: tz });
    const actuales = new Date(now);
    const hoy = actuales.toISOString().slice(0,10);
    const minNow = actuales.getHours()*60 + actuales.getMinutes();

    cupoPorHora = {};
    // Actualiza cada opción de hora
    horaEl.querySelectorAll('option[value]').forEach(opt => {
      const h = opt.value;
      const info = horarios[h];
      if (!info) {
        opt.hidden = true;
        return;
      }
      // Ocultar si ya pasó hoy o si no quedan lugares
      const pasada = (fecha === hoy) && toMin(h) <= minNow;
      const llena  = info.espaciosDisponibles === 0;
      opt.hidden = pasada || llena;

      // Guarda cupo real
      if (!opt.hidden) cupoPorHora[h] = info.espaciosDisponibles;
    });

    // Reactiva
    horaEl.disabled = false;
    personasEl.disabled = false;
    avisoCupo.textContent = '';
    horaEl.value = '';
    personasEl.innerHTML = '<option value="">Selecciona</option>';
  }

  // Al cambiar hora, genera selector personas y aviso
  function onHoraChange() {
    const h = horaEl.value;
    if (!h) {
      avisoCupo.textContent = '';
      personasEl.innerHTML = '<option value="">Selecciona</option>';
      return;
    }
    const real = cupoPorHora[h] || 0;
    const max  = Math.min(real, 8);
    // Reconstruye personas
    let html = '<option value="">Selecciona</option>';
    for (let i = 1; i <= max; i++) {
      html += `<option value="${i}">${i} persona${i>1?'s':''}</option>`;
    }
    personasEl.innerHTML = html;
    avisoCupo.textContent = `Quedan ${real} lugar${real>1?'es':''} disponibles.`;
  }

  // Envío de formulario
  form.addEventListener('submit', async e => {
    e.preventDefault();
    submitBtn.disabled = true;
    submitBtn.textContent = 'Enviando…';

    const datos = Object.fromEntries(new FormData(form).entries());
    try {
      const r = await fetch('/api/reservations', {
        method:'POST',
        headers:{'Content-Type':'application/json'},
        body: JSON.stringify(datos)
      });
      const j = await r.json();
      if (r.ok) {
        alert('¡Reserva recibida! Te confirmaremos pronto.');
        form.reset();
        avisoCupo.textContent = '';
      } else {
        alert(j.message || 'No fue posible reservar.');
      }
    } catch {
      alert('Error de conexión. Intenta de nuevo.');
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = 'Confirmar reserva';
    }
  });

  // Listeners
  fechaEl.addEventListener('change', refrescarHorarios);
  horaEl.addEventListener('change', onHoraChange);

  // Precarga si había fecha
  if (fechaEl.value) refrescarHorarios();
});
</script>
